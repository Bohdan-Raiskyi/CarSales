@model IEnumerable<CarSalesDomain.Model.Ad>

@{
    ViewData["Title"] = "Оголошення";
}

<h2>Оголошення</h2>

@if (TempData["DeleteError"] != null)
{
    <div class="alert alert-danger">
        @TempData["DeleteError"]
    </div>
}

<p>
    <a asp-action="Create">Створити</a>
    <a asp-action="Import">Завантажити з файлу</a>
    <a asp-action="Export">Експортувати у файл</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SoldDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Brand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriceRange)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SoldDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand.BrandName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PriceRange.RangeLabel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Region.RegName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type.CarType1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.Email)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Змінити</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Деталі</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Видалити</a> |
                <a asp-action="Sell" asp-route-id="@item.Id">Продати</a> 
            </td>

        </tr>
}
    </tbody>
</table>

<div class="row">
    <div class="col-6">
        <h2>Оголошення за регіонами</h2>
        <div id="adsByRegionPie" style="width: 100%; height: 400px;"></div>
    </div>

    <div class="col-6">
        <h2>Оголошення за ціновим діапазоном</h2>
        <div id="adsByPriceRangePie" style="width: 100%; height: 400px;"></div>
    </div>
</div>

@section Scripts {
    <script src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { packages: ['corechart'] });
        google.charts.setOnLoadCallback(drawAllCharts);

        function drawAllCharts() {
            drawAdsByPriceRange();
            drawAdsByRegion();
        }


        function drawAdsByPriceRange() {
            fetch('/api/Chart/ads-by-price-range')
                .then(response => response.json())
                .then(data => {
                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Ціновий діапазон');
                    dataTable.addColumn('number', 'Кількість');

                    data.forEach(item => {
                        dataTable.addRow([item.label, item.value]);
                    });

                    const options = {
                        title: 'Розподіл оголошень за ціновим діапазоном',
                        is3D: false,
                        pieHole: 0.4,
                        legend: { position: 'right' },
                        width: '100%',
                        height: 400,
                        colors: ['#4285F4', '#34A853', '#FBBC05', '#EA4335', '#5F6368', '#185ABC']
                    };

                    const chart = new google.visualization.PieChart(document.getElementById('adsByPriceRangePie'));
                    chart.draw(dataTable, options);
                });
        }

        function drawAdsByRegion() {
            fetch('/api/Chart/ads-by-region')
                .then(response => response.json())
                .then(data => {
                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Регіон');
                    dataTable.addColumn('number', 'Кількість');

                    data.forEach(item => {
                        dataTable.addRow([item.label, item.value]);
                    });

                    const options = {
                        title: 'Розподіл оголошень за регіонами',
                        is3D: false,
                        pieHole: 0.4,
                        legend: { position: 'right' },
                        width: '100%',
                        height: 400,
                        colors: ['#FBBC05', '#4285F4', '#34A853', '#EA4335', '#5F6368', '#185ABC']
                    };

                    const chart = new google.visualization.PieChart(document.getElementById('adsByRegionPie'));
                    chart.draw(dataTable, options);
                });
        }
    </script>
}